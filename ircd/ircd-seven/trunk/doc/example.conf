/* doc/example.conf - ircd-ratbox Example configuration file
 *
 * Copyright (C) 2000-2002 Hybrid Development Team
 * Copyright (C) 2002-2003 ircd-ratbox development team
 * Copyright (C) 2006 Elfyn McBratney
 *
 * Written by ejb, wcampbel, db, leeh and others
 *
 * $Id$
 */

/* serverinfo {}:  Contains information about the server. (OLD M:) */
serverinfo {
	name = "test.seven";
	use_ts6 = yes;
	sid = "00B";
	description = "ircd-seven test server";
	network_name = "MyNet";
	network_desc = "This is My Network";
	hub = yes;
	vhost = "127.0.0.3";
	#vhost6 = "dead:beef:cafe::2";
	default_max_clients = 1000;
};

/* admin {}: contains admin information about the server. (OLD A:) */
admin {
	name = "Administrative info for seven.arpa";
	description = "Welcome to My Network! For assistance, please \"/stats p\" and message someone on the list";
	email = "For further assistance, email this@address";
};

/* log {}: contains information about logfiles. */
log {
	fname_userlog = "logs/userlog";
	fname_fuserlog = "logs/fuserlog";
	fname_operlog = "logs/operlog";
	fname_foperlog = "logs/foperlog";
	fname_serverlog = "logs/serverlog";
	fname_klinelog = "logs/klinelog";
	fname_killlog = "logs/killlog";
	fname_ioerrorlog = "logs/ioerror";
};

/* class {}: contain information about classes for users (OLD Y:) */
class "users" {
	ping_time = 2 minutes;
	number_per_ident = 2;
	number_per_ip = 4;
	number_per_ip_global = 20;
	cidr_bitlen = 32;
	#cidr_bitlen = 64;
	number_per_cidr = 4;
	max_number = 4000;
	sendq = 1000 kbytes;
};

class "opers" {
	ping_time = 5 minutes;
	number_per_ip = 10;
	max_number = 100;
	sendq = 2 megabytes;
};

class "server" {
	ping_time = 5 minutes;
	connectfreq = 5 minutes;
	max_number = 1;
	sendq = 10 megabytes;
};

/* listen {}: contain information about the ports ircd listens on (OLD P:) */
listen {
	host = "127.0.0.3";
	port = 5000, 6665 .. 6669, 8001, 39811;
};

/* auth {}: allow users to connect to the ircd (OLD I:) */
auth {
	user = "*beu@127.0.0.0/8";
	password = "$1$1N9RG8O4$pAJHcATYl0eKY8ETjUen30"; # "password"
	spoof = "seven/staff/beu";
	flags = encrypted, spoof_notice, exceed_limit, kline_exempt, spambot_exempt,
		shide_exempt, jupe_exempt, resv_exempt, flood_exempt, no_tilde;
	class = "opers";
};

auth {
	user = "*@*";
	class = "users";
};

/* operator {}: defines ircd operators. (OLD O:)
 * ircd-ratbox no longer supports local operators, privileges are
 * controlled via flags.
 */
operator "beu" {
	user = "*@seven/staff/beu";
	password = "$1$0sJEB9Oe$mrbcjBm41nDJge5YAkdwq0"; # "opassword"
	#rsa_public_key_file = "/path/to/oper.pub";
	umodes = invisible, servnotice, wallop, operwall;
	flags = encrypted, global_kill, remote, kline, unkline, 
		nick_changes, rehash, die, admin, xline, operwall,
		auspex, remoteban, override;
};

connect "hub.seven" {
	host = "127.0.0.2";
	vhost = "127.0.0.3";
	send_password = "password";
	accept_password = "password";
	port = 39811;
	hub_mask = "*";
	#leaf_mask = "*.something";
	class = "server";
	flags = autoconn, compressed, topicburst;
};

connect "leaf.seven" {
	host = "127.0.0.4";
	send_password = "password";
	accept_password = "password";
	class = "server";
	flags = compressed, topicburst;
};

/* cluster {}; servers that we propagate things to automatically.
 * NOTE: This does NOT grant them privileges to apply anything locally,
 *       you must add a seperate shared block for that.  Clustering will
 *       only be done for actions by LOCAL opers, that arent directed
 *       remotely.
 */
cluster {
	name = "*";
	flags = all;
};

#service {
#	name = "services.seven";
#};

/* shared {}: users that are allowed to place remote bans on our server.
 * NOTE: These are ordered top down.  The first one the user@host and server
 *       matches will be used.  Their access will then be decided on that
 *       block and will not fall back to another block that matches.
 */
shared {
	oper = "*@seven/staff/beu";
	flags = all;

	oper = "*@*";
	flags = kline, tkline, unkline, txline, tresv, rehash;
};

/* exempt {}: IPs that are exempt from deny {} and Dlines. (OLD d:) */
exempt {
	ip = "127.0.0.2";
	ip = "127.0.0.4";
};

/* The channel block contains options pertaining to channels */
channel {
	use_invex = yes;
	use_except = yes;
	use_knock = yes;
	invite_ops_only = yes;
	knock_delay = 5 minutes;
	knock_delay_channel = 1 minute;
	max_chans_per_user = 30;
	quiet_on_ban = yes;
	max_bans = 60;
	default_split_user_count = 0;
	default_split_server_count = 0;
	no_create_on_split = no;
	no_join_on_split = no;
	burst_topicwho = yes;
};

serverhide {
	flatten_links = yes;
	links_delay = 5 minutes;
	hidden = no;
	disable_hidden = no;
};

/* The general block contains many of the options that were once compiled
 * in options in config.h.  The general block is read at start time.
 */
general {
	hide_error_messages = opers;
	hide_spoof_ips = yes;
	default_invisible = no;
	default_operstring = "is opered up";
	default_adminstring = "is opered up";
	tkline_expire_notices = yes;
	default_floodcount = 10;
	disable_fake_channels = yes;
	failed_oper_notice = yes;
	dots_in_ident = 2;
	dot_in_ip6_addr = no;
	min_nonwildcard = 4;
	min_nonwildcard_simple = 3;
	max_accept = 20;
	max_monitor = 100;
	anti_nick_flood = yes;
	max_nick_time = 30 seconds;
	max_nick_changes = 3;
	anti_spam_exit_message_time = 5 minutes;
	ts_warn_delta = 5 seconds;
	ts_max_delta = 30 minutes;
	client_exit = yes;
	dline_with_reason = yes;
	kline_delay = 0 seconds;
	kline_with_reason = yes;
	kline_reason = "K-lined";
	non_redundant_klines = yes;
	warn_no_nline = yes;
	stats_e_disabled = no;
	stats_c_oper_only = yes;
	stats_h_oper_only = yes;
	stats_y_oper_only = yes;
	stats_o_oper_only = yes;
	stats_P_oper_only = no;
	stats_i_oper_only = masked;
	stats_k_oper_only = masked;
	map_oper_only = yes;
	caller_id_wait = 1 minute;
	pace_wait_simple = 1 second;
	pace_wait = 10 seconds;
	short_motd = no;
	ping_cookie = no;
	connect_timeout = 30 seconds;
	disable_auth = no;
	no_oper_flood = yes;
	idletime = 0;

	/* REMOVE ME.  The following line checks you've been reading. */
	havent_read_conf = yes;

	max_targets = 4;
	client_flood = 20;
	use_whois_actually = yes;
	oper_only_umodes = bots, cconn, debug, full, skill, nchange,
		rej, spy, external, operwall, locops, unauth;
	oper_umodes = servnotice, operwall, wallop;
	#compression_level = 6;
	burst_away = no;
	reject_ban_time = 1 minute;
	reject_after_count = 3;
	reject_duration = 5 minutes;
};

modules {
	path = "/home/beu/ircd/seven/modules";
	path = "/home/beu/ircd/seven/modules/autoload";
	path = "/home/beu/ircd/seven/modules/contrib";

	/* module: the name of a module to load on startup/rehash */
	#module = "some_module.so";
};
