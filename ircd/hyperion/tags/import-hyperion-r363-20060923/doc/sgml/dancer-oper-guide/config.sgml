  <chapter id="config">
    <title>Server config file format</title>
    <sect1>
      <title>General format</title>
      <para>
	The config file consists of a series of discrete lines. Each line consists of a series
	of colon-separated fields, the first of which is a single character, which defines what
	sort of thing the line is describing.
      </para>
      <para>
	A line may also be a .include directive, which is of the form <synopsis>.include "<replaceable>file</replaceable>"</synopsis>
	and causes <replaceable>file</replaceable> to be read in at that point, before the rest of the current file is
	processed.
      </para>
      <para>
	Anything from a # to the end of a line is a comment. Blank lines are ignored.
      </para>
    </sect1>
    <sect1 id="configlines">
      <title>Specific lines</title>
      <sect2>
	<title>M:line</title>
	<synopsis>M:<replaceable>server name</replaceable>:<optional><replaceable>bind address</replaceable></optional>:<replaceable>description</replaceable></synopsis>
	<para>
	  the name the server will claim to be to clients and to other servers, and usually is chosen to
	  be something that resolves to the server's IP address. The text description is sent out in
	  LINKS and when clients connect.
	</para>
	<para>
	  The optional bind address is which interface to bind to/send from when making outgoing connections.
	</para>
      </sect2>
      <sect2>
	<title>A:line</title>
	<synopsis>A:<replaceable>text</replaceable>:<replaceable>text</replaceable>:<replaceable>text</replaceable></synopsis>
	<para>
	  This line should contain exactly three text fields, which can contain any arbitrary text. It is
	  returned by the ADMIN command. It is suggested that it contains the name of the organisation
	  running the IRC <emphasis>network</emphasis>, and a means to contact the network/server administrator
	  (probably email).
	</para>
      </sect2>
      <sect2>
	<title>Y:line</title>
	<synopsis>Y:<replaceable>class</replaceable>:<replaceable>ping frequency</replaceable>:<replaceable>connect frequency</replaceable>:<replaceable>maximum links</replaceable>:<replaceable>sendq size</replaceable></synopsis>
	<para>
	  Y:lines define classes of connections for later use. The class number is used to connect them to
	  other lines in the config file.
	</para>
	<para>
	  All fields are integers. The <replaceable>class</replaceable> field must be a value greater than
	  zero, and must uniquely identify the connection class within the config. The rate at which things
	  in this connection are pinged to see if their connection is still alive is controlled by the
	  second field.
	</para>
	<para>
	  <replaceable>connect frequency</replaceable> for a server connection is the time in seconds this server will
	  wait before attempting to make a connection (if autoconnect is allowed). If the connect frequency is 0 then
	  only one connection will be attempted, at server startup. For a client class, this is the number of 
	  connections which will be allowed from the same originating IP address, or 0 for no limit.
	</para>
	<para>
	  sendq is the size in bytes of the queue which holds messages awaiting delivery to the target. For
	  clients a few hundred thousand bytes is adequete; for servers at least 4Mb is recommended.
	</para>
	<para>
	  When picking a server to connect to, the ircd will try higher connection classes first, unless
	  they are waiting for the "connect frequency" time to elapse before trying again.
	</para>
      </sect2>
      <sect2>
	<title>I:line</title>
	<synopsis>I:<optional><replaceable>spoof host</replaceable></optional>:<optional><replaceable>password</replaceable></optional>:<replaceable>domain mask</replaceable>::<replaceable>connection class</replaceable></synopsis>
	<para>
	  I:lines allow client connections to the server, and control/set various flags about those connections.
	</para>
	<para>
          The spoof host is used if the = flag is specified.
	</para>
	<para>
	  If a password is given, then it must be used at connection time or the connection will be
	  dropped, without checking any other I:lines.
	</para>
	<para>
	  The domain mask matches may (and usually does) contain wildcards. The domain mask may have
	  several prefixes which affect the client connection. They are:
	  <itemizedlist>
	    <listitem>
	      <para>
		-  Don't prefix a ~ to the username if the ident check fails.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		+  Require ident check to succeed to connect.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		!  Only allow n connections (as defined in the Y:line) per IP address, not per hostmask.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		^  Exempt from K/G lines. Partially exempt from D lines.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		&  Will not be killed by the bot check.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		>  Exempt from connection limits.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		=  The IP mask field contains the hostname to spoof to.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		/  Spoof the hostname automatically on connect.
	      </para>
	    </listitem>
	  </itemizedlist>
	</para>
	<para>
	  If no = flag is given, then SPOOF_LIMIT_HOST in config.h will be used as the hostname to spoof
	  to, if any.
	</para>
      </sect2>
      <sect2>
	<title>O:line</title>
	<synopsis>O:<replaceable>hostname</replaceable>:<replaceable>password</replaceable>:<replaceable>nick</replaceable>:<replaceable>allowed umodes</replaceable>:<replaceable>connection class</replaceable>:<replaceable>default umodes</replaceable></synopsis>
	<para>
	  O:lines define who may use the OPER command to gain extended privileges.
	</para>
	<para>
	  The hostname may be a mask, and must match for an OPER command to work.
	  The password may be encrypted as an MD5 hash, depending on compile-time configuration.
	</para>
	<para>
	  Dancer uses a very different system than most ircds. Rather than a capabilities field, it has
	  a field which contains the list of umodes an oper may have. This allows for very fine control
	  of what a person can and can't do.
	</para>
	<para>
	  When an OPER command succeeds, the user will be moved into the connection class specified
	  in the O:line, and they will have all the umodes in the "default umodes" field set.
	</para>
      </sect2>
      <sect2>
	<title>C/N:lines</title>
	<synopsis>C:<replaceable>hostname</replaceable>:<optional><replaceable>password</replaceable></optional>:<replaceable>name</replaceable>:<optional><replaceable>port</replaceable></optional>:<replaceable>connection class</replaceable></synopsis>
	<synopsis>N:<replaceable>hostname</replaceable>:<optional><replaceable>password</replaceable></optional>:<replaceable>name</replaceable>::<replaceable>connection class</replaceable><optional>:</optional></synopsis>
	<para>
	  These always appear in matched pairs, and define what servers may connect or be connected to.
	</para>
	<para>
	  The hostname must match that of the remote server. The cleartext password in the C:line on one
	  side of a link must match the (possibly hashed) password in the N:line on the other side. The
	  name must match that given in the first field of the M:line on the remote server.
	</para>
	<para>
	  If a port is given in the C:line, a connection will be automatically attempted according to the
	  connection class, on startup, and at regular intervals when a server is not connected.
	</para>
	<para>
	  In order for a server to be listed in the LINKS response, it must have an N:line (it need not
	  have a C:line, nor need there be a valid password in the N:line).  <emphasis>If the last (6th
	  field) is present (ie: trailing colon after connection class), then the server will not be
	  listed in LINKS.</emphasis> This allows you to have locally connected servers which are not
	  listed, and listed servers which are not locally connected.
	</para>
      </sect2>
      <sect2>
	<title>K:line</title>
	<synopsis>K:<replaceable>hostname</replaceable>:<optional><replaceable>time ranges</replaceable></optional>:<replaceable>username</replaceable></synopsis>
	<para>
	  A K:line bans all users matching a given user and host from connecting to the server. Both the
	  hostname and the username may contain wildcards.
	</para>
	<para>
	  The time ranges field is deprecated. It allows a range of times in which the K:line is in effect.
	</para>
      </sect2>
      <sect2>
	<title>D:line</title>
	<synopsis>D:<replaceable>IP address</replaceable>:<replaceable>comment</replaceable></synopsis>
	<para>
	  D:lines (dumps) drop all connections from the given address or CIDR mask. This is notably less expensive
	  on the server than a K:line, so should be used by preference to deal with persistant attackers. Note
	  that D:lines must be individually placed on each server, and should not be used lightly.
	</para>
      </sect2>
      <sect2>
	<title>Q:lines</title>
	<synopsis>Q:<replaceable>nick mask</replaceable>:<replaceable>reason</replaceable><optional>:<replaceable>user</replaceable>@<replaceable>host</replaceable></optional></synopsis>
	<para>
	  Q:lines (quarantines) prevent the given nick or anything matching the given mask from being used, unless
	  the user is connected matching the given user@host mask.
	</para>
      </sect2>
      <sect2>
	<title>X:lines</title>
	<synopsis>X:<replaceable>mask</replaceable>:<replaceable>reason</replaceable>::<replaceable>kill</replaceable></synopsis>
	<para>
	  X:lines match the mask against the realname field for the a client attempting to connect. If <replaceable>kill</replaceable>
	  is non-zero (true) then the client will be dropped as if they were K:lined, instead of being allowed to connect, otherwise
	  a warning notice will be broadcast to the opers with +r set.
	</para>
      </sect2>
      <sect2>
	<title>H:line</title>
	<synopsis>H:<replaceable>domain mask</replaceable>::<replaceable>server name</replaceable></synopsis>
	<para>
	  An H:line allows a remote server matching the given masks to introduce other servers.
	</para>
      </sect2>
      <sect2>
	<title>P:line</title>
	<synopsis>P::<optional><replaceable>bind address</replaceable></optional>::<replaceable>port number</replaceable></synopsis>
	<para>
	  A P:line specifies what ports a server should listen on.
	</para>
      </sect2>
    </sect1>
  </chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-namecase-general:t
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document: ("dancer-oper-guide.sgml" "book")
sgml-exposed-tags:nil
fill-column:105
sgml-validate-command: "nsgmls -e -g -s -u dancer-oper-guide.sgml"
End:
-->
